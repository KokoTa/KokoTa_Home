(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{287:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js精度问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js精度问题"}},[t._v("#")]),t._v(" JS精度问题")]),t._v(" "),s("p",[t._v("本来用着JS写代码是一件很舒服的事情，但是自从接手了价格计算的功能后，一点都开森不起来，理由如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加法 =====================")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.30000000000000004")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7999999999999999")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6000000000000001")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 减法 =====================")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.30000000000000004")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.09999999999999998")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 乘法 =====================")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19.9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1989.9999999999998")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4000000000000004")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35.41")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3540.9999999999995")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除法 =====================")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.9999999999999996")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.69")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.06899999999999999")]),t._v("\n")])])]),s("p",[t._v("是的，你没有看错，Javascript存在精度问题，由于当时项目急于上线，因此把价格计算托付给了后端大佬们去实现，省了不少麻烦。"),s("br"),t._v("\n不过现在回过头来看看，原理是肿么回事？前端是否可以解决这个问题呢？")]),t._v(" "),s("h2",{attrs:{id:"浮点数的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数的存储"}},[t._v("#")]),t._v(" 浮点数的存储")]),t._v(" "),s("p",[t._v("JS 浮点数使用 64 位固定长度比特来表示，即标准的双精度(double)。"),s("br"),t._v("\n这种存储结构的优点是归一化处理整数和小数，节省存储空间。")]),t._v(" "),s("p",[t._v("这 64 位比特分为三个部分：")]),t._v(" "),s("ul",[s("li",[t._v("符号位S：即第 1 位，表示正负，0为正，1为负")]),t._v(" "),s("li",[t._v("指数位E：即第 2 位 ~ 第 12 位，表示次方数")]),t._v(" "),s("li",[t._v("尾数位M：即后面剩余的 52 位，表示尾数，超出的部分自动 "),s("code",[t._v("进 1 舍 0")])])]),t._v(" "),s("p",[t._v("接下来我们回顾一下二进制及编码的知识，这有助于接下来的理解：")]),t._v(" "),s("ol",[s("li",[t._v("原码：计算机中对数字的二进制表示，最高位表示符号，其余表示数值。优点是简单直观，缺点是不能直接计算。因为如果是正数，原码是可以正常表示并参与计算的，但如果是负数，那么原码需要转成反码后才能进行计算。"),s("strong",[t._v("eg")]),t._v("：假设有两个四位二进制数，"),s("code",[t._v("0001")]),t._v(" 表示 1，"),s("code",[t._v("1001")]),t._v(" 表示 -1，此时若两者相加 "),s("code",[t._v("0001 + 1001 = 1010 = -2 != 0")]),t._v("，结果为 -2 是错误的。")]),t._v(" "),s("li",[t._v("反码：反码即除了符号位外，反转了剩余所有原码的位。"),s("code",[t._v("1001")]),t._v(" 的反码是 "),s("code",[t._v("1110")]),t._v("，此时 "),s("code",[t._v("0001 + 1110 = 1111")]),t._v("，而 "),s("code",[t._v("1111")]),t._v(" 表示 -0 ("),s("code",[t._v("0000")]),t._v(" 表示 +0)，所以结果是正确的。所以说反码解决了负数的二进制表示问题。")]),t._v(" "),s("li",[t._v("补码：从上一点我们知道了 0 有两个，即 +0 和 -0，按常识来说我们希望只有一个 0，此时我们给负数的所有反码 +1，如图："),s("br"),t._v(" "),s("img",{attrs:{src:"/images/%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81.png",alt:"image"}}),t._v('\n这样我们就解决了 0 的问题，同时也解决了"正负数相加不等于0"的问题')])]),t._v(" "),s("h2",{attrs:{id:"浮点数表示方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数表示方法"}},[t._v("#")]),t._v(" 浮点数表示方法")]),t._v(" "),s("p",[t._v("从 IEEE 754 规范中我们可以得到二进制浮点数的公式："),s("br"),t._v(" "),s("img",{attrs:{src:"/images/%E6%B5%AE%E7%82%B9%E6%95%B0%E5%85%AC%E5%BC%8F.jpg",alt:"image"}}),s("br"),t._v("\n公式以科学记数法的形式来表示，其中字母的含义和上一节相对应。")]),t._v(" "),s("ol",[s("li",[t._v("S 为符号位，"),s("code",[t._v("S = 0")]),t._v(" 时，V为正；"),s("code",[t._v("S = 1")]),t._v(" 时，V为负")]),t._v(" "),s("li",[t._v("E 为指数位")]),t._v(" "),s("li",[t._v("M 为有效字数，由于是科学记数法，所以 "),s("code",[t._v("1 <= M < 2")])])]),t._v(" "),s("p",[t._v("同时规范规定了：")]),t._v(" "),s("ol",[s("li",[t._v("由于 "),s("code",[t._v("1 <= M < 2")]),t._v("，所以 M 可以写成 1.xxxx 的格式，而计算机保存 M 时，默认第一位总是 1， 所以只保存小数部分，节省了一位有效数字")]),t._v(" "),s("li",[t._v("上一节我们知道指数位为 11 位的二进制，即范围是 0 ~ 2047，然而科学记数法中 E 可以为负数，为为了计算机处理数据的方便，所以 E 的真实值必须取一个中间数（偏移值），"),s("code",[t._v("1023")]),t._v("，即 0 ~1023 为负，1024 ~ 2047 为正(单精度下的范围是 0 ~ 255，中间数为 "),s("code",[t._v("127")]),t._v(")。")])]),t._v(" "),s("p",[t._v("所以为什么 "),s("code",[t._v("0.1 + 0.2 = 0.30000000000000004")]),t._v(" ？\n让我们来看看 "),s("strong",[t._v("浮点数加法运算流程")]),t._v("：")]),t._v(" "),s("p",[t._v("我们首先让十进制转为二进制，即：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.000110011001100110011001100110011001100110011001100110")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001100110011001100110011001100110011001100110011001101")]),t._v("\n")])])]),s("p",[t._v("然后根据科学记数法得到(为方便理解，我们使用单精度来表示)：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.10011001100110011001100110011001100110011001100110")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111011")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10011001100110011001100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 小数点后移了四位，指数 E 为 -4，由于中间数为 127，所以对应的指数值为 127 - 4 = 123，转为二进制为 1111011，加上符号位 0，得到 01111011")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. (1)为整数位，不计入尾数位")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.100110011001100110011001100110011001100110011001101")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10011001100110011001100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("接着我们进行对阶(顾名思义就是对齐阶码，使两数的小数点位置对齐，小阶向大阶对齐)：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为 0.1 的阶码为 -4，0.2 的阶码为 -3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -4 < -3，小阶向大阶对齐，所以要使前者对齐后者，使两者相等")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 意思就是 0.1 这个数的二进制表示得再前移一位，从向右移动 4 位，变为向右移动 3 位")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这将导致 0.1 的科学计数法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 指数位本来是 -4，现在变为 -3，指数值为 124，转为二进制后得到 01111100，阶码对齐了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 尾数位因为前进一位，所以整体右移，为 (0)11001100110011001100110")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.000110011001100110011001100110011001100110011001100110")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11001100110011001100110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("OK，现在让 0.1 + 0.2，即：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11001100110011001100110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10011001100110011001100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于对阶，所以只求尾数位相加")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11001100110011001100110")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10011001100110011001100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01100110011001100110010")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后就得到了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01100110011001100110010")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为整数位应为 1，而此时的整数位为 10，超了1位，所以尾数位应整体右移一位，相应的指数位也会变化，格式化后最终得到")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01111101")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("指数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00110011001100110011001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尾数位"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 总结 => 尾数位整体右移，阶码变大(-4 -> -3)，指数值也变大(123 -> 124)，指数位变大(01111100 -> 01111101)")]),t._v("\n")])])]),s("p",[t._v("最后你会发现，尾数位最后的 0 被挤掉了，而这个就是产生误差的原因"),s("br"),t._v("\n最终这个数转化为十进制就是 "),s("code",[t._v("0.30000000000000004")])]),t._v(" "),s("p",[t._v("OK，知道了原因，那么我们该如何避免精度问题呢？")]),t._v(" "),s("h2",{attrs:{id:"解决方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),s("p",[t._v("一开始的时候，我使用的是 "),s("strong",[t._v("toFixed")]),t._v("，但是这个 API 也是有问题的，比如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.4 正确")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.335")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.33  错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的原因是 1.335 在处理时实际对应的的是 1.3349999")]),t._v("\n")])])]),s("p",[t._v("因此 toFixed 方法无法运用到生产环境中")]),t._v(" "),s("p",[t._v("接着 "),s("strong",[t._v("toPrecision")]),t._v(" 映入眼帘，它用来处理精度，精度是从左至右第一个不为0的数开始。")]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("展示型")]),t._v(" 数据，我们可以使用这个 API，比如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4000000000000001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrecision")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// True")]),t._v("\n")])])]),s("p",[t._v("封装成方法的话：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" precision "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般选择 12 为默认精度，算是经验选择")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrecision")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("precision"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但对于 "),s("code",[t._v("加减乘除")]),t._v(" 的运算，它就不适用了"),s("br"),t._v("\n因为精度问题发生于小数计算，所以解决方法是将小数变为整数进行计算，然后再变回小数，举个栗子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 精确加法\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num1Digits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num2Digits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" baseNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1Digits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2Digits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" baseNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" baseNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" baseNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当然，如果遇到科学记数法(精度大于 21)时，需要特别处理")]),t._v(" "),s("p",[t._v("虽然可以手动实现这些运算函数，但是在生产环境中，还是使用现有的轮子比较妥当"),s("br"),t._v(" "),s("a",{attrs:{href:"https://github.com/nefe/number-precision",target:"_blank",rel:"noopener noreferrer"}},[t._v("number-precision"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://github.com/josdejong/mathjs",target:"_blank",rel:"noopener noreferrer"}},[t._v("mathjs"),s("OutboundLink")],1),t._v(" 可以解决精度问题")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/camsong/blog/issues/9",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 浮点数陷阱及解法"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://juejin.im/post/594a31d0a0bb9f006b0b2624",target:"_blank",rel:"noopener noreferrer"}},[t._v("浮点数精度之谜"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://juejin.im/post/5aa1395c6fb9a028df223516",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS中浮点数精度问题"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);